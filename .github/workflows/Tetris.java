
public class Tetris {
	static int blocksize = 20;
	int random = 0 , random2 = (int)(Math.random()*7);
	int score =0;
	int rotation = 0;
	boolean limit = false;
	int curX[]= new int[4], curY[] = new int [4];
	   
	int blocks[][][][] = 
	{
		{
	        {
	            {0,0,0,0},
	            {1,0,0,0},
	            {1,1,1,0},
	            {0,0,0,0}
	        },
	        {
	            {0,1,1,0},
	            {0,1,0,0},
	            {0,1,0,0},
	            {0,0,0,0}
	        },
	        {
	            {1,1,1,0},
	            {0,0,1,0},
	            {0,0,0,0},
	            {0,0,0,0}
	        },
	        {
	            {0,0,1,0},
	            {0,0,1,0},
	            {0,1,1,0},
	            {0,0,0,0}
	        }
	    },
	    {
	        {
	            {0,0,0,0},
	            {0,0,1,0},
	            {1,1,1,0},
	            {0,0,0,0}
	        },
	        {
	            {0,1,0,0},
	            {0,1,0,0},
	            {0,1,1,0},
	            {0,0,0,0}
	        },
	        {
	            {0,0,0,0},
	            {1,1,1,0},
	            {1,0,0,0},
	            {0,0,0,0}
            },
	        {
	            {0,1,1,0},
	            {0,0,1,0},
	            {0,0,1,0},
	            {0,0,0,0}
	        }
	    },
	    {
	        {
                {0,0,0,0},
	            {0,1,1,0},
		        {1,1,0,0},
		        {0,0,0,0}
		    },
		    {
		        {0,1,0,0},
		        {0,1,1,0},
		        {0,0,1,0},
		        {0,0,0,0}
		    },       
		    {
		    	{0,0,0,0},
		        {0,1,1,0},
		        {1,1,0,0},
		        {0,0,0,0}
		    },
		    {
		        {0,1,0,0},
		        {0,1,1,0},
		        {0,0,1,0},
		        {0,0,0,0}
		    }
	    },
	    {
	        {
	            {0,0,0,0},
	            {0,0,0,0},
	            {1,1,1,1},
	            {0,0,0,0}
	        },
	        {
	            {0,1,0,0},
	            {0,1,0,0},
	            {0,1,0,0},
	            {0,1,0,0}
	        },
	        {
	            {0,0,0,0},
	            {0,0,0,0},
	            {1,1,1,1},
	            {0,0,0,0}
	        },
	        {
	            {0,1,0,0},
	            {0,1,0,0},
	            {0,1,0,0},
	            {0,1,0,0}
	        }
	    },
	    {
	        {
	            {0,0,0,0},
	            {0,1,0,0},
	            {1,1,1,0},
	            {0,0,0,0}
	        },
	        {
	            {0,1,0,0},
	            {0,1,1,0},
	            {0,1,0,0},
	            {0,0,0,0}
	        },
	        {
	            {0,0,0,0},
	            {1,1,1,0},
	            {0,1,0,0},
	            {0,0,0,0}
	        },
	        {
	            {0,1,0,0},
	            {1,1,0,0},
	            {0,1,0,0},
	            {0,0,0,0}
	        }   
	    },
	    {
	        {
	            {0,0,0,0},
	            {1,1,0,0},
	            {0,1,1,0},
	            {0,0,0,0}
	        },
	        {
	            {0,0,1,0},
	            {0,1,1,0},
	            {0,1,0,0},
	            {0,0,0,0}
	        },
	        {
	            {0,0,0,0},
	            {1,1,0,0},
	            {0,1,1,0},
	            {0,0,0,0}
	        },
	        {
	            {0,0,1,0},
	            {0,1,1,0},
	            {0,1,0,0},
	            {0,0,0,0}
	        }
	    },
	    {
	    	{
		        {0,0,0,0},
		        {1,1,0,0},
		        {1,1,0,0},
		        {0,0,0,0}
		    },
		    {
		        {0,0,0,0},
		        {1,1,0,0},
		        {1,1,0,0},
		        {0,0,0,0}
		    },
		    {
		    	{0,0,0,0},
		    	{1,1,0,0},
		    	{1,1,0,0},
		    	{0,0,0,0}
		    },
		    {
		    	{0,0,0,0},
		    	{1,1,0,0},
		    	{1,1,0,0},
		    	{0,0,0,0}
		    }
	    }
	};
	   
	int[][] gameboard = {{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
	                     {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
	                     {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}};
	class TetrisThread extends Thread{
		public void run(){
			while(true){
				try{
					sleep(500);
					if(limit == false) {}
				}catch(InterruptedException e){
					return;
				}
			}
		}
	}
}
